/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package IUEmpleado;

import Containers.ContenedoraSocio;
import Model.Socio;
import Webcam.WebCamScan;
import Webcam.WebcamClass;

import javax.swing.*;
import java.awt.*;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.util.concurrent.CompletableFuture;

/**
 *
 * @author sanch
 */
public class IngresoSocios extends javax.swing.JFrame {

    /**
     * Creates new form IngresoSocios
     */
    private WebCamScan webCamScan;

    /**
     * Creates new form IngresoSocios
     */
            ContenedoraSocio socios = new ContenedoraSocio();

    public IngresoSocios() {
        initComponents();

        try {
            socios.cargarSociosDeJson("Socios.json");
        } catch (IOException e) {
            System.out.println("Error al cargar el JSON de Socios");
        }

        socios.verificarQr();
        validarIngresoBtn.setVisible(false);
        validarIngresoBtn.setEnabled(false);


    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        scanBtn = new javax.swing.JButton();
        cerrarSesionLabel = new javax.swing.JLabel();
        fotoUsuario = new javax.swing.JLabel();
        validarIngresoBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        scanBtn.setText("ESCANEAR");
        scanBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                scanBtnMouseClicked(evt);
            }
        });
        scanBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                scanBtnActionPerformed(evt);
            }
        });

        cerrarSesionLabel.setText("Cerrar Sesion");

        fotoUsuario.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/images/FotoCarnet.png"))); // NOI18N
        fotoUsuario.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fotoUsuarioMouseClicked(evt);
            }
        });

        validarIngresoBtn.setText("Validar Ingreso");
        validarIngresoBtn.setActionCommand("Validar Ingreso");
        validarIngresoBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                try {
                    validarIngresoBtnMouseClicked(evt);
                } catch (Exception e) {
                    throw new RuntimeException(e);
                }
            }
        });
        validarIngresoBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                validarIngresoBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(fotoUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addComponent(validarIngresoBtn))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(67, 67, 67)
                        .addComponent(scanBtn)))
                .addContainerGap(71, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(cerrarSesionLabel)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(62, 62, 62)
                        .addComponent(scanBtn)
                        .addGap(18, 18, 18)
                        .addComponent(validarIngresoBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(28, Short.MAX_VALUE)
                        .addComponent(fotoUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)))
                .addComponent(cerrarSesionLabel)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void scanBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_scanBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_scanBtnActionPerformed

    private void scanBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_scanBtnMouseClicked

        WebCamScan webCamScan = new WebCamScan(new Runnable() {
            @Override
            public void run() {
                // Leer archivo y actualizar datosSocio
                validarIngresoBtn.setVisible(true);
                validarIngresoBtn.setEnabled(true);

                String filePath = "src/com/imagesPersonas/" + leerArchivo() + ".png";
                File file = new File(filePath);
                if (file.exists()) {
                    ImageIcon icon = new ImageIcon(new ImageIcon(filePath).getImage().getScaledInstance(fotoUsuario.getWidth(), fotoUsuario.getHeight(), Image.SCALE_SMOOTH));
                    fotoUsuario.setIcon(icon);
                }
            }
        });
        webCamScan.createAndShowGUI();

    }//GEN-LAST:event_scanBtnMouseClicked

    private void fotoUsuarioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fotoUsuarioMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_fotoUsuarioMouseClicked

    private void validarIngresoBtnMouseClicked(java.awt.event.MouseEvent evt) throws Exception {//GEN-FIRST:event_validarIngresoBtnMouseClicked
        String dato = leerArchivo();
        Socio socioIngresante = socios.buscar(Integer.valueOf(dato));
        if (socioIngresante == null) {
            javax.swing.JOptionPane.showMessageDialog(this, "No se encontró al socio.", "Error de Ingreso", javax.swing.JOptionPane.ERROR_MESSAGE);
        } else {
            if (!socioIngresante.isAptoMedico() && socioIngresante.isAptoCuota()) {
                javax.swing.JOptionPane.showMessageDialog(this, "El socio debe realizar su certificado médico.", "Error de Ingreso", javax.swing.JOptionPane.ERROR_MESSAGE);
            } else if (!socioIngresante.isAptoCuota() && socioIngresante.isAptoMedico()) {
                javax.swing.JOptionPane.showMessageDialog(this, "El socio debe pagar su cuota.", "Error de Ingreso", javax.swing.JOptionPane.ERROR_MESSAGE);
            } else if (!socioIngresante.isAptoCuota() && !socioIngresante.isAptoMedico()) {
                javax.swing.JOptionPane.showMessageDialog(this, "El socio debe pagar su cuota y realizar su certificación médica.", "Error de Ingreso", javax.swing.JOptionPane.ERROR_MESSAGE);
            } else if (socioIngresante.isAptoCuota() && socioIngresante.isAptoMedico()) {
                javax.swing.JOptionPane.showMessageDialog(this, "El socio está al día y puede realizar sus actividades.", "Ingreso exitoso", JOptionPane.INFORMATION_MESSAGE);
            }
        }
    }//GEN-LAST:event_validarIngresoBtnMouseClicked

    private void validarIngresoBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_validarIngresoBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_validarIngresoBtnActionPerformed


    public String leerArchivo() {
        String rutaArchivo = "src/com/temp/datoingreso.txt";
        StringBuilder contenido = new StringBuilder();

        try (BufferedReader reader = new BufferedReader(new FileReader(rutaArchivo))) {
            String linea;
            while ((linea = reader.readLine()) != null) {
                contenido.append(linea);
            }
        } catch (IOException e) {
            e.printStackTrace();
            // Manejo de errores si no se puede leer el archivo
        }

        return contenido.toString();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel cerrarSesionLabel;
    private javax.swing.JLabel fotoUsuario;
    private javax.swing.JButton scanBtn;
    private javax.swing.JButton validarIngresoBtn;
    // End of variables declaration//GEN-END:variables
}
