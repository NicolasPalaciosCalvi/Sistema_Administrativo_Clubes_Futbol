/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package IUEmpleado;

import Containers.ContenedoraSocio;
import Mail.Correos;
import Model.Socio;
import Login.Login;

import javax.imageio.ImageIO;
import javax.swing.*;
import java.awt.*;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;

/**
 *
 * @author sanch
 */
public class IngresoSociosSinCam extends javax.swing.JFrame {
    ContenedoraSocio socios = new ContenedoraSocio();
    /**
     * Creates new form IngresoSociosSinCam
     */
    public IngresoSociosSinCam() {
        initComponents();
setTitle("Administracion Acantilados FC");
        try{
            File iconFile = new File("src/com/images/LOGO1.png"); // Ruta de tu imagen
            BufferedImage iconImage = ImageIO.read(iconFile);
            setIconImage(iconImage);
        }catch (IOException ex) {
            ex.printStackTrace();
        }

        try {
            socios.cargarSociosDeJson("Socios.json");
        } catch (IOException e) {
            System.out.println("Error al cargar el JSON de Socios");
        }


        validarIngresoBtn.setVisible(false);
        validarIngresoBtn.setEnabled(false);
        fondoDatos.setVisible(false);
        fondoDatos.setEnabled(false);


    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fondoDatos = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        buscarTxt = new javax.swing.JTextField();
        scanBtn = new javax.swing.JButton();
        cerrarSesionLabel = new javax.swing.JLabel();
        Marco = new javax.swing.JLabel();
        fotoUsuario = new javax.swing.JLabel();
        validarIngresoBtn = new javax.swing.JButton();
        pelota4 = new javax.swing.JLabel();
        pelota2 = new javax.swing.JLabel();
        fondo_1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        fondoDatos.setBackground(new java.awt.Color(255, 255, 255));
        fondoDatos.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        fondoDatos.add(jLabel1);

        getContentPane().add(fondoDatos, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 20, 220, 30));

        buscarTxt.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        buscarTxt.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        buscarTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarTxtActionPerformed(evt);
            }
        });
        getContentPane().add(buscarTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 100, 220, 30));

        scanBtn.setText("BUSCAR");
        scanBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                scanBtnMouseClicked(evt);
            }
        });
        scanBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                scanBtnActionPerformed(evt);
            }
        });
        getContentPane().add(scanBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 140, -1, -1));

        cerrarSesionLabel.setForeground(new java.awt.Color(59, 132, 173));
        cerrarSesionLabel.setText("Cerrar Sesion");
        cerrarSesionLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cerrarSesionLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cerrarSesionLabelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                cerrarSesionLabelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                cerrarSesionLabelMouseExited(evt);
            }
        });
        getContentPane().add(cerrarSesionLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 180, -1, -1));

        Marco.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/imagesPersonas/marcoPerso.png"))); // NOI18N
        getContentPane().add(Marco, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 0, 250, 200));

        fotoUsuario.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/images/FotoCarnet.png"))); // NOI18N
        fotoUsuario.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fotoUsuarioMouseClicked(evt);
            }
        });
        getContentPane().add(fotoUsuario, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 24, 150, 150));

        validarIngresoBtn.setText("Validar Ingreso");
        validarIngresoBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                validarIngresoBtnMouseClicked(evt);
            }
        });
        validarIngresoBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                validarIngresoBtnActionPerformed(evt);
            }
        });
        getContentPane().add(validarIngresoBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 140, -1, -1));

        pelota4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/images/medicine.png"))); // NOI18N
        getContentPane().add(pelota4, new org.netbeans.lib.awtextra.AbsoluteConstraints(-30, -40, -1, -1));

        pelota2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/images/medicine.png"))); // NOI18N
        getContentPane().add(pelota2, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, -120, 200, 270));

        fondo_1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/images/Rectangle 1.png"))); // NOI18N
        getContentPane().add(fondo_1, new org.netbeans.lib.awtextra.AbsoluteConstraints(-20, -20, 450, 230));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void scanBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_scanBtnMouseClicked

        String text = buscarTxt.getText().trim();

        if (text.isEmpty()) {

            JOptionPane.showMessageDialog(this, "El campo de búsqueda está vacío.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        int dato = Integer.parseInt(buscarTxt.getText());

        String filePath = "src/com/imagesPersonas/" + dato + ".png";
        File file = new File(filePath);
        if (file.exists()) {
            ImageIcon icon = new ImageIcon(new ImageIcon(filePath).getImage().getScaledInstance(fotoUsuario.getWidth(), fotoUsuario.getHeight(), Image.SCALE_SMOOTH));
            fotoUsuario.setIcon(icon);

        } else {
            filePath = "src/com/images/FotoCarnet.png";
            ImageIcon icon = new ImageIcon(new ImageIcon(filePath).getImage().getScaledInstance(fotoUsuario.getWidth(), fotoUsuario.getHeight(), Image.SCALE_SMOOTH));
            fotoUsuario.setIcon(icon);
        }
        try {
            Socio socioIngresante = socios.buscar(dato);
            jLabel1.setText("Nombre Completo: " + socioIngresante.getNombre() + " " + socioIngresante.getApellido());
            validarIngresoBtn.setVisible(true);
            validarIngresoBtn.setEnabled(true);
            fondoDatos.setVisible(true);
            buscarTxt.setEditable(false);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            actualizarEstado();
        }
            }//GEN-LAST:event_scanBtnMouseClicked

    private void scanBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_scanBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_scanBtnActionPerformed

    private void cerrarSesionLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cerrarSesionLabelMouseClicked
        Login login = new Login();
        login.setVisible(true);
        login.pack();
        login.setLocationRelativeTo(null);
        this.dispose();
    }//GEN-LAST:event_cerrarSesionLabelMouseClicked

    private void cerrarSesionLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cerrarSesionLabelMouseEntered
        cerrarSesionLabel.setBackground(new Color(80,139,166));
    }//GEN-LAST:event_cerrarSesionLabelMouseEntered

    private void cerrarSesionLabelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cerrarSesionLabelMouseExited
        cerrarSesionLabel.setBackground(new Color(59,132,173));
    }//GEN-LAST:event_cerrarSesionLabelMouseExited

    private void fotoUsuarioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fotoUsuarioMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_fotoUsuarioMouseClicked

    private void validarIngresoBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_validarIngresoBtnMouseClicked
        new SwingWorker<Void, Void>() {
            @Override
            protected Void doInBackground() throws Exception {
                Correos correo = new Correos();
                int dato = Integer.parseInt(buscarTxt.getText());
                try {
                    Socio socioIngresante = socios.buscar(dato);
                    System.out.println(socioIngresante);
                    if (socioIngresante == null) {
                        JOptionPane.showMessageDialog(IngresoSociosSinCam.this, "No se encontró al socio.", "Error de Ingreso", JOptionPane.ERROR_MESSAGE);
                    } else {
                        if (!socioIngresante.isAptoMedico() && socioIngresante.isAptoCuota()) {
                            JOptionPane.showMessageDialog(IngresoSociosSinCam.this, "El socio debe realizar su certificado médico.", "Error de Ingreso", JOptionPane.ERROR_MESSAGE);
                            actualizarEstado();
                            correo.CorreoAptoMedicoRequerido(socioIngresante.getEmail(), socioIngresante.getNombre());
                        } else if (!socioIngresante.isAptoCuota() && socioIngresante.isAptoMedico()) {
                            JOptionPane.showMessageDialog(IngresoSociosSinCam.this, "El socio debe pagar su cuota.", "Error de Ingreso", JOptionPane.ERROR_MESSAGE);
                            actualizarEstado();
                            correo.CorreoDeuda(socioIngresante.getEmail());
                        } else if (!socioIngresante.isAptoCuota() && !socioIngresante.isAptoMedico()) {
                            JOptionPane.showMessageDialog(IngresoSociosSinCam.this, "El socio debe pagar su cuota y realizar su certificación médica.", "Error de Ingreso", JOptionPane.ERROR_MESSAGE);
                            actualizarEstado();
                            correo.CorreoRegularizate(socioIngresante.getEmail(), socioIngresante.getNombre());
                        } else if (socioIngresante.isAptoCuota() && socioIngresante.isAptoMedico()) {
                            actualizarEstado();
                            JOptionPane.showMessageDialog(IngresoSociosSinCam.this, "El socio está al día y puede realizar sus actividades.", "Ingreso exitoso", JOptionPane.INFORMATION_MESSAGE);
                        }
                    }
                } catch (IOException e) {
                    JOptionPane.showMessageDialog(IngresoSociosSinCam.this, "Error de E/S: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(IngresoSociosSinCam.this, e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
                }
                return null;
            }

            @Override
            protected void done() {
                // Actualizar el estado después de completar todas las operaciones

            }
        }.execute();
    }//GEN-LAST:event_validarIngresoBtnMouseClicked

    private void actualizarEstado() {
        validarIngresoBtn.setVisible(false);
        validarIngresoBtn.setEnabled(false);
        fondoDatos.setVisible(false);
        fondoDatos.setEnabled(false);
        jLabel1.setText("");
        buscarTxt.setText("");
        buscarTxt.setEditable(true);
        String filePath = "src/com/images/FotoCarnet.png";
        ImageIcon icon = new ImageIcon(new ImageIcon(filePath).getImage().getScaledInstance(fotoUsuario.getWidth(), fotoUsuario.getHeight(), Image.SCALE_SMOOTH));
        fotoUsuario.setIcon(icon);
    }

    private void validarIngresoBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_validarIngresoBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_validarIngresoBtnActionPerformed

    private void buscarTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_buscarTxtActionPerformed



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Marco;
    private javax.swing.JTextField buscarTxt;
    private javax.swing.JLabel cerrarSesionLabel;
    private javax.swing.JPanel fondoDatos;
    private javax.swing.JLabel fondo_1;
    private javax.swing.JLabel fotoUsuario;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel pelota2;
    private javax.swing.JLabel pelota4;
    private javax.swing.JButton scanBtn;
    private javax.swing.JButton validarIngresoBtn;
    // End of variables declaration//GEN-END:variables
}
